<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="board">
	
	<select id="sequence" resultType="Long">
		select board_seq.nextval from dual
	</select>

	<insert id="insert" parameterType="BoardDto">
		insert into board(
			board_no, member_no, board_content, board_like, board_lat, board_lon, 
			board_time, board_reply, board_reply_valid, board_like_valid, board_report, 
			board_hide, board_kid, board_size
		) 
		values(
			board_seq.nextval, #{memberNo}, #{boardContent}, #{boardLike}, #{boardLat}, #{boardLon},
			SYSDATE , #{board_reply}, #{boardReplyValid}, #{boardLikeValid}, #{board_report},
			#{boardHide}, #{boardKid}, #{boardSize}
		)
	</insert>
	
	<select id="selectOne" resultType="BoardDto">
		select * from board where board_no=#{boardNo}
	</select>
	<select id="selectList" resultType="BoardDto">
		select * from board order by board_no asc
	</select>
	<update id="edit" parameterType="BoardDto">
		update board set 
		board_content=#{boardContent}, board_reply_valid=#{boardReplyValid}, board_like_valid=#{boardLikeValid},
		board_hide=#{boardHide}, board_kid=#{boardKid}, board_size=#{boardSize} where board_no=#{boardNo}
	</update>
	<delete id="delete">
		delete board where board_no=#{boardNo}
	</delete>
	
	 <!-- SQL 구문 조각 생성 -->
	 <sql id="topNheader">
	 	select * from (
	 		select rownum rn, TMP.*from(
	 		</sql>
	 <sql id="topNfooter">
	 		)TMP
	 	)where rn between #{begin} and #{end}
	 </sql>
	
	<select id="selectListPaging" resultType="BoardDto">
		<include refid="topNheader"></include>
			select * from board	order by board_no asc
		<include refid="topNfooter"></include>	
	</select>
	
	<!-- 좋아요 개수 갱신 기능 -->
	<update id="updateLikeCount">
		update board set board_like = #{count} where board_no = #{boardNo}
	</update>
	
	
	<!-- board와 boardAttachment 계층형 조회 -->
	<resultMap type="BoardListVO" id="boardListVO">
		<association property="boardWithNickDto">
			<result column="board_no" property="boardNo"/>
			<result column="member_no" property="memberNo"/>
			<result column="board_content" property="boardContent"/>
			<result column="board_like" property="boardLike"/>
			<result column="board_lat" property="boardLat"/>
			<result column="board_lon" property="boardLon"/>
			<result column="board_time" property="boardTime"/>
			<result column="board_reply" property="boardReply"/>
			<result column="board_reply_valid" property="boardReplyValid"/>
			<result column="board_like_valid" property="boardLikeValid"/>
			<result column="board_report" property="boardReport"/>
			<result column="board_hide" property="boardHide"/>
			<result column="board_kid" property="boardKid"/>
			<result column="board_size" property="boardSize"/>
			<result column="member_nick" property="memberNick"/>
			<result column="attachment_no" property="attachmentNo"/>
		</association>
		<collection property="boardAttachmentList"
				javaType="java.util.List" ofType="BoardAttachmentDto"
				select="boardListTreeSelectSub" column="board_no">
			<result column="board_attachment_no" property="boardAttachmentNo"/>
			<result column="board_no" property="boardNo"/>
			<result column="attachment_no" property="attachmentNo"/>
		</collection>
	</resultMap>
	
	
	<!-- 계층형 조회 메인 구문 -->
	<select id="boardListTreeSelect" resultMap="boardListVO">
		<include refid="topNheader"></include>
	 		select * from board_with_nick 
	 		order by board_no asc
	 	<include refid="topNfooter"></include>	
	</select>
	<!-- 서브구문 -->
	<select id="boardListTreeSelectSub" resultType="boardAttachmentDto">
		select * from board_attachment where board_no = #{boardNo}
	</select>
	
	<!-- 계층형 조회 메인 구문 팔로우, 차단 구현 -->
	<select id="boardListWithFollow" resultMap="boardListVO">
		<bind name="followExist" value="followDtoList!=null and followDtoList.size()>0"></bind>
		<bind name="blockExist" value="blockDtoList!=null and blockDtoList.size()>0"></bind>
		<include refid="topNheader"></include>
	 		select * from board_with_nick 
	 		<where>
	 			<choose>
		 			<when test="followExist">
		 				and member_no in
		 				<foreach collection="followDtoList" open="(" close=")" item="followDto" separator=",">
		 					#{followDto.followFollower}
		 				</foreach>
		 			</when>
		 			<otherwise>
		 				and member_no in(-1)
		 			</otherwise>
	 			</choose>
	 			<if test="blockExist">
	 				and member_no not in
	 				<foreach collection="blockDtoList" open="(" close=")" item="blockDto" separator=",">
	 					#{blockDto.blockNo}
	 				</foreach>
	 			</if>
	 		</where>
	 		order by board_no asc
	 	<include refid="topNfooter"></include>	
	</select>

	<!-- 계층형 조회 메인 구문 차단 구현 -->
	<select id="boardListWithoutFollow" resultMap="boardListVO">
		<bind name="followExist" value="followDtoList!=null and followDtoList.size()>0"></bind>
		<bind name="blockExist" value="blockDtoList!=null and blockDtoList.size()>0"></bind>
		<include refid="topNheader"></include>
	 		select * from board_with_nick 
	 		<where>
	 			<if test="blockExist">
	 				and member_no not in
	 				<foreach collection="blockDtoList" open="(" close=")" item="blockDto" separator=",">
	 					#{blockDto.blockNo}
	 				</foreach>
	 			</if>
	 		</where>
	 		order by board_no asc
	 	<include refid="topNfooter"></include>	
	</select>


	<!-- 신고수 추가 기능 -->
	<update id="addReport">
		update board set board_report = board_report+1 where board_no=#{boardNo}
	</update>
	
	<!-- 게시물 총 개수  -->
	<select id="getTotalPostCount" resultType="int">
		select count(*) from board where member_no = #{memberNo}
	</select>
	
	<!-- 추후 코드 수정 예정 -5/19 재영 -->
	<select id="getTotalMyPost" resultType="boardDto">
	select A.*, B.attachment_no from board A inner join board_attachment B on A.board_no = B.board_no where member_no = #{memberNo}
	</select>
	
</mapper>
