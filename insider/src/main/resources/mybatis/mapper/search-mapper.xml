<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="search">
<!-- SQL 구문 조각 생성 -->
	 <sql id="topNheader">
	 	select * from (
	 		select rownum rn, TMP.*from(
	 		</sql>
	 <sql id="topNfooter">
	 		)TMP
	 	)where rn between #{begin} and #{end}
	 </sql>
<!-- 검색 추천 리스트 출력 -->
	<select id="selectRecommand" resultType="searchComplexDto">
		select * from search_complex where instr(name, #{searchInput})>0 or instr(nick, #{searchInput})>0
		ORDER BY UTL_MATCH.EDIT_DISTANCE(name, #{searchInput}) ASC, UTL_MATCH.EDIT_DISTANCE(nick, #{searchInput}) ASC
	</select>
<!-- 검색했던 리스트 출력 -->
	<select id="selectSearched" resultType="searchWithProfileDto">
		select * from search_with_profile where member_no=#{memberNo} and search_Delete=0 order by search_time desc 
	</select>
<!-- 검색 기록 삭제 -->
	<update id="searchDelete">
		update search
		set search_delete=1
		where member_no=#{memberNo}
		<if test="searchTagName!=null and !searchTagName.equals('')">
			and search_tag_name=#{searchTagName}
		</if>
		<if test="searchMemberNo!=null and !searchMemberNo.equals('')">
			and search_member_no=#{searchMemberNo}
		</if>
	</update>
<!-- 검색기록 추가 -->
	<insert id="insert">
		insert into search(
		search_no, member_no
		<if test="searchTagName!=null and !searchTagName.equals('')">
			,search_tag_name
		</if>
		<if test="searchMemberNo!=null and !searchMemberNo.equals('')">
			,search_member_no
		</if>
		) 
		values(
		search_seq.nextval, #{memberNo}
		<if test="searchTagName!=null and !searchTagName.equals('')">
			,#{searchTagName}
		</if>
		<if test="searchMemberNo!=null and !searchMemberNo.equals('')">
			,#{searchMemberNo}
		</if>
		)
	</insert>
<!-- 단일조회 -->
	<select id="selectOne" resultType="searchDto">
		select * from search where member_no=#{memberNo}
		<if test="searchTagName!=null and !searchTagName.equals('')">
			and search_tag_name=#{searchTagName}
		</if>
		<if test="searchMemberNo!=null and !searchMemberNo.equals('')">
			and search_member_no=#{searchMemberNo}
		</if>
	</select>
<!-- 검색기록 시간 갱신 -->
	<update id="updateTime">
		update search
		set search_time=sysdate, search_delete=0
		where member_no=#{memberNo}
		<if test="searchTagName!=null and !searchTagName.equals('')">
			and search_tag_name=#{searchTagName}
		</if>
		<if test="searchMemberNo!=null and !searchMemberNo.equals('')">
			and search_member_no=#{searchMemberNo}
		</if>
	</update>
	
<!-- 통계구문 -->
	<select id="selectStatsList" resultType="searchStatsVO">
		<bind name="memberGenderExist" value="memberGender!=null and !memberGender.equals('')"></bind>
		<bind name="memberBeginBirthExist" value="memberBeginBirth!=null and !memberBeginBirth.equals('')"></bind>
		<bind name="memberEndBirthExist" value="memberEndBirth!=null and !memberEndBirth.equals('')"></bind>
		<bind name="searchBeginDateExist" value="searchBeginDate!=null and !searchBeginDate.equals('')"></bind>
		<bind name="searchEndDateExist" value="searchEndDate!=null and !searchEndDate.equals('')"></bind>
		<include refid="topNheader"></include>
		
		SELECT ${column} AS name, count(*) AS count FROM search_with_profile 
		WHERE member_no IN 
		(SELECT member_no FROM member
		<where>
		<!-- 성별 -->
			<if test="memberGenderExist">
				and instr(member_gender, #{memberGender})>0
			</if>
		<!-- 생일 -->
		 	<choose>
		 		<when test="memberBeginBirthExist and memberEndBirthExist">
		 			and member_birth between
		 				to_date(#{memberBeginBirth}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 				and
		 				to_date(#{memberEndBirth}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="memberBeginBirthExist">
		 			and member_birth >= to_date(#{memberBeginBirth}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="memberEndBirthExist">
		 			<![CDATA[
		 			and member_birth <= to_date(#{memberEndBirth}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 			]]> 
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		</where>
		) 
		AND ${column} IS NOT null 
			<choose>
		 		<when test="searchBeginDateExist and searchEndDateExist">
		 			and search_time between
		 				to_date(#{searchBeginDate}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 				and
		 				to_date(#{searchEndDate}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="searchBeginDateExist">
		 			and search_time >= to_date(#{searchBeginDate}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="searchEndDateExist">
		 			<![CDATA[
		 			and search_time <= to_date(#{searchEndDate}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 			]]> 
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		GROUP BY ${column}
		order by count desc
		
		)TMP
		<choose>
			<when test="column.equals('search_tag_name')">
			 	)where rn between #{tagBegin} and #{tagEnd}
			</when>
			<otherwise>
				)where rn between #{nickBegin} and #{nickEnd}
			</otherwise>
		</choose>
	</select>
</mapper>