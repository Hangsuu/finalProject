<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tag">
	 <!-- SQL 구문 조각 생성 -->
	 <sql id="topNheader">
	 	select * from (
	 		select rownum rn, TMP.*from(
	 		</sql>
	 <sql id="topNfooter">
	 		)TMP
	 	)where rn between #{begin} and #{end}
	 </sql>

	<insert id="insert">
		insert into tag(tag_name) values(#{tagName})
	</insert>
	<!-- 태그 팔로우 수 추가 -->
	<update id="updateFollow">
		update tag set tag_follow=#{tagFollow} where tag_name=#{tagName}
	</update>
	<select id="selectOne" resultType="tagDto">
		select * from tag where tag_name=#{tagName}
	</select>
	<select id="selectList" resultType="tagDto">
		select * from tag
	</select>
	<!-- 태그 사용상테 업데이트 -->
	<update id="updateAvailable">
		update tag set tag_available=#{tagAvailable} where tag_name=#{tagName}
	</update>
	
<!-- 조건검색 태그 리스트 -->
	<select id="tagCountList" resultType="tagCountVO">
		<bind name="memberNickExist" value="memberNick!=null and !memberNick.equals('')"></bind>
		<bind name="boardTimeBeginExist" value="boardTimeBegin!=null and !boardTimeBegin.equals('')"></bind>
		<bind name="boardTimeEndExist" value="boardTimeEnd!=null and !boardTimeEnd.equals('')"></bind>
		<bind name="boardMinReportExist" value="boardMinReport!=null and !boardMinReport.equals('')"></bind>
		<bind name="boardMaxReportExist" value="boardMaxReport!=null and !boardMaxReport.equals('')"></bind>
		<bind name="boardMinLikeExist" value="boardMinLike!=null and !boardMinLike.equals('')"></bind>
		<bind name="boardMaxLikeExist" value="boardMaxLike!=null and !boardMaxLike.equals('')"></bind>
		<bind name="boardHideExist" value="boardHide!=null and !boardHide.equals('')"></bind>
		<bind name="tagOrderListExist" value="tagOrderList!=null and tagOrderList.size()>0"></bind>
		<bind name="tagMinFollowExist" value="tagMinFollow!=null and !tagMinFollow.equals('')"></bind>
		<bind name="tagMaxFollowExist" value="tagMaxFollow!=null and !tagMaxFollow.equals('')"></bind>
		<bind name="tagAvailableExist" value="tagAvailable!=null and !tagAvailable.equals('')"></bind>
		<bind name="tagMinCountExist" value="tagMinCount!=null and !tagMinCount.equals('')"></bind>
		<bind name="tagMaxCountExist" value="tagMaxCount!=null and !tagMaxCount.equals('')"></bind>
		<include refid="topNheader"></include>
		SELECT t.*, bts.count FROM tag t INNER JOIN (
		SELECT bt.tag_name, COUNT(*) AS count
		FROM board b
		JOIN board_tag bt ON b.board_no = bt.board_no
 		<where>
 			<if test="memberNickExist">
 				and instr(b.member_nick, #{memberNick})>0
 			</if>
 			<!-- 게시시간 -->
	 		<choose>
		 		<when test="boardTimeBeginExist and boardTimeEndExist">
		 			and b.board_time between
		 				to_date(#{boardTimeBegin}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 				and
		 				to_date(#{boardTimeEnd}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="boardTimeBeginExist">
		 			and b.board_time >= to_date(#{boardTimeBegin}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="boardTimeEndExist">
		 			<![CDATA[
		 			and b.board_time <= to_date(#{boardTimeEnd}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 			]]> 
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<!-- 신고 -->
		 	<choose>
		 		<when test="boardMinReportExist and boardMaxReportExist">
		 			and b.board_report between #{boardMinReport} and #{boardMaxReport}
		 		</when>
		 		<when test="boardMinReportExist">
		 			and b.board_report >= #{boardMinReport}
		 		</when>
		 		<when test="boardMaxReportExist">
		 			<![CDATA[
		 			and b.board_report <= #{boardMaxReport}
		 			]]>
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<!-- 좋아요 -->
		 	<choose>
		 		<when test="boardMinLikeExist and boardMaxLikeExist">
		 			and b.board_like between #{boardMinLike} and #{boardMaxLike}
		 		</when>
		 		<when test="boardMinLikeExist">
		 			and b.board_like >= #{boardMinLike}
		 		</when>
		 		<when test="boardMaxLikeExist">
		 			<![CDATA[
		 			and b.board_like <= #{boardMaxLike}
		 			]]>
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<!-- 숨김여부 -->
		 	<if test="boardHideExist">
 				and b.board_hide=#{boardHide}
 			</if>
 		</where>
		GROUP BY bt.tag_name) bts ON t.tag_name=bts.tag_name
		<where>
		 	<choose>
		 		<when test="tagMinFollowExist and tagMaxFollowExist">
		 			and tag_follow between #{tagMinFollow} and #{tagMaxFollow}
		 		</when>
		 		<when test="tagMinFollowExist">
		 			and tag_follow >= #{tagMinFollow}
		 		</when>
		 		<when test="tagMaxFollowExist">
		 			<![CDATA[
		 			and tag_follow <= #{tagMaxFollow}
		 			]]>
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<choose>
		 		<when test="tagMinCountExist and tagMaxCountExist">
		 			and count between #{tagMinCount} and #{tagMaxCount}
		 		</when>
		 		<when test="tagMinCountExist">
		 			and count >= #{tagMinCount}
		 		</when>
		 		<when test="tagMaxCountExist">
		 			<![CDATA[
		 			and count <= #{tagMaxCount}
		 			]]>
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<choose>
		 		<when test="tagAvailableExist">
		 			and tag_available=#{tagAvailable}
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		</where>
 		<choose>
	 		<when test="tagOrderListExist">
		 		<foreach collection="tagOrderList" open="order by " item="order" separator=",">
					${order}
		 		</foreach>
		 	</when>
		 	<otherwise>order by count desc</otherwise>
 		</choose>
	 		)TMP
	 	)where rn between #{tagBegin} and #{tagEnd}
	</select>
	<select id="tagCountListCount" resultType="int">
		<bind name="memberNickExist" value="memberNick!=null and !memberNick.equals('')"></bind>
		<bind name="boardTimeBeginExist" value="boardTimeBegin!=null and !boardTimeBegin.equals('')"></bind>
		<bind name="boardTimeEndExist" value="boardTimeEnd!=null and !boardTimeEnd.equals('')"></bind>
		<bind name="boardMinReportExist" value="boardMinReport!=null and !boardMinReport.equals('')"></bind>
		<bind name="boardMaxReportExist" value="boardMaxReport!=null and !boardMaxReport.equals('')"></bind>
		<bind name="boardMinLikeExist" value="boardMinLike!=null and !boardMinLike.equals('')"></bind>
		<bind name="boardMaxLikeExist" value="boardMaxLike!=null and !boardMaxLike.equals('')"></bind>
		<bind name="boardHideExist" value="boardHide!=null and !boardHide.equals('')"></bind>
		<bind name="tagMinFollowExist" value="tagMinFollow!=null and !tagMinFollow.equals('')"></bind>
		<bind name="tagMaxFollowExist" value="tagMaxFollow!=null and !tagMaxFollow.equals('')"></bind>
		<bind name="tagAvailableExist" value="tagAvailable!=null and !tagAvailable.equals('')"></bind>
		SELECT count(*) FROM tag t INNER JOIN (
		SELECT bt.tag_name, COUNT(*) AS count
		FROM board b
		JOIN board_tag bt ON b.board_no = bt.board_no
 		<where>
 			<if test="memberNickExist">
 				and instr(b.member_nick, #{memberNick})>0
 			</if>
 			<!-- 게시시간 -->
	 		<choose>
		 		<when test="boardTimeBeginExist and boardTimeEndExist">
		 			and b.board_time between
		 				to_date(#{boardTimeBegin}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 				and
		 				to_date(#{boardTimeEnd}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="boardTimeBeginExist">
		 			and b.board_time >= to_date(#{boardTimeBegin}||' '||'00:00:00', 'YYYY-MM-DD HH24:MI:SS')
		 		</when>
		 		<when test="boardTimeEndExist">
		 			<![CDATA[
		 			and b.board_time <= to_date(#{boardTimeEnd}||' '||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		 			]]> 
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<!-- 신고 -->
		 	<choose>
		 		<when test="boardMinReportExist and boardMaxReportExist">
		 			and b.board_report between #{boardMinReport} and #{boardMaxReport}
		 		</when>
		 		<when test="boardMinReportExist">
		 			and b.board_report >= #{boardMinReport}
		 		</when>
		 		<when test="boardMaxReportExist">
		 			<![CDATA[
		 			and b.board_report <= #{boardMaxReport}
		 			]]>
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<!-- 좋아요 -->
		 	<choose>
		 		<when test="boardMinLikeExist and boardMaxLikeExist">
		 			and b.board_like between #{boardMinLike} and #{boardMaxLike}
		 		</when>
		 		<when test="boardMinLikeExist">
		 			and b.board_like >= #{boardMinLike}
		 		</when>
		 		<when test="boardMaxLikeExist">
		 			<![CDATA[
		 			and b.board_like <= #{boardMaxLike}
		 			]]>
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<!-- 숨김여부 -->
		 	<if test="boardHideExist">
 				and b.board_hide=#{boardHide}
 			</if>
 		</where>
		GROUP BY bt.tag_name) bts ON t.tag_name=bts.tag_name
		<where>
		 	<choose>
		 		<when test="tagMinFollowExist and tagMaxFollowExist">
		 			and tag_follow between #{tagMinFollow} and #{tagMaxFollow}
		 		</when>
		 		<when test="tagMinFollowExist">
		 			and tag_follow >= #{tagMinFollow}
		 		</when>
		 		<when test="tagMaxFollowExist">
		 			<![CDATA[
		 			and tag_follow <= #{tagMaxFollow}
		 			]]>
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		 	<choose>
		 		<when test="tagAvailableExist and tagAvailable==1">
		 			and tag_available=1
		 		</when>
		 		<when test="tagAvailableExist and tagAvailable==0">
		 			and tag_available=0
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		</where>
	</select>
</mapper>